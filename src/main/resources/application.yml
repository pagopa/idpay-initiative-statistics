server:
  port: ${INITIATIVE_STATISTICS_PORT:8080}

app:
  kafka:
    consumer:
      onboarding-outcome:
        topic: ${KAFKA_ONBOARDING_OUTCOME_TOPIC:idpay-onboarding-outcome}
        bootstrap-servers: ${KAFKA_ONBOARDING_OUTCOME_SERVERS:${KAFKA_SERVERS:localhost:9092}}
        group-id: ${KAFKA_ONBOARDING_OUTCOME_GROUP_ID:idpay-onboarding-outcome-group}
        client-id: ${KAFKA_ONBOARDING_OUTCOME_CLIENT_ID:idpay-onboarding-outcome-initiative-statistics}
        auto-offset-reset: ${KAFKA_ONBOARDING_OUTCOME_OFFSET_RESET:earliest}
        heartbeat-interval: ${KAFKA_ONBOARDING_OUTCOME_HEARTBEAT_INTERVAL:3000}
        security.protocol: ${KAFKA_ONBOARDING_OUTCOME_SECURITY_PROTOCOL:${KAFKA_SECURITY_PROTOCOL:SASL_SSL}}
        listener:
          concurrency: ${KAFKA_ONBOARDING_OUTCOME_CONCURRENCY:2}
        properties:
          sasl.mechanism: ${KAFKA_ONBOARDING_OUTCOME_SASL_MECHANISM:${KAFKA_SASL_MECHANISM:PLAIN}}
          sasl.jaas.config: ${KAFKA_ONBOARDING_OUTCOME_SASL_JAAS_CONFIG:${KAFKA_SASL_JAAS_CONFIG:org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${KAFKA_ONBOARDING_OUTCOME_CONNECTION_STRING:}";}}
          max.poll:
            records: ${KAFKA_ONBOARDING_OUTCOME_MAX_POLL_SIZE:500}
            interval.ms: ${KAFKA_ONBOARDING_OUTCOME_POLL_INTERVAL:300000}
          request.timeout.ms: ${KAFKA_ONBOARDING_OUTCOME_REQUEST_TIMEOUT:60000}
          session.timeout.ms: ${KAFKA_ONBOARDING_OUTCOME_SESSION_TIMEOUT:30000}
          connections.max.idle.ms: ${KAFKA_ONBOARDING_OUTCOME_CONNECTION_MAX_IDLE_TIME:180000}
          metadata.max.age.ms: ${KAFKA_ONBOARDING_OUTCOME_METADATA_MAX_AGE_INTERVAL:180000}
      transaction-evaluation:
        topic: ${KAFKA_TRANSACTION_EVALUATION_TOPIC:idpay-transactions}
        bootstrap-servers: ${KAFKA_TRANSACTION_EVALUATION_SERVERS:${KAFKA_SERVERS:localhost:9092}}
        group-id: ${KAFKA_TRANSACTION_EVALUATION_GROUP_ID:idpay-transaction-evaluation-group}
        client-id: ${KAFKA_TRANSACTION_EVALUATION_CLIENT_ID:idpay-transaction-evaluation-initiative-statistics}
        auto-offset-reset: ${KAFKA_TRANSACTION_EVALUATION_OFFSET_RESET:earliest}
        heartbeat-interval: ${KAFKA_TRANSACTION_EVALUATION_HEARTBEAT_INTERVAL:3000}
        security.protocol: ${KAFKA_TRANSACTION_EVALUATION_SECURITY_PROTOCOL:${KAFKA_SECURITY_PROTOCOL:SASL_SSL}}
        listener:
          concurrency: ${KAFKA_TRANSACTION_EVALUATION_CONCURRENCY:2}
        properties:
          sasl.mechanism: ${KAFKA_TRANSACTION_EVALUATION_SASL_MECHANISM:${KAFKA_SASL_MECHANISM:PLAIN}}
          sasl.jaas.config: ${KAFKA_TRANSACTION_EVALUATION_SASL_JAAS_CONFIG:${KAFKA_SASL_JAAS_CONFIG:org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${KAFKA_TRANSACTION_EVALUATION_CONNECTION_STRING:}";}}
          max.poll:
            records: ${KAFKA_TRANSACTION_EVALUATION_MAX_POLL_SIZE:500}
            interval.ms: ${KAFKA_TRANSACTION_EVALUATION_POLL_INTERVAL:300000}
          request.timeout.ms: ${KAFKA_TRANSACTION_EVALUATION_REQUEST_TIMEOUT:60000}
          session.timeout.ms: ${KAFKA_TRANSACTION_EVALUATION_SESSION_TIMEOUT:30000}
          connections.max.idle.ms: ${KAFKA_TRANSACTION_EVALUATION_CONNECTION_MAX_IDLE_TIME:180000}
          metadata.max.age.ms: ${KAFKA_TRANSACTION_EVALUATION_METADATA_MAX_AGE_INTERVAL:180000}
    producer:
      errors:
        topic: ${KAFKA_ERROR_MESSAGE_TOPIC:idpay-errors}
        properties:
          bootstrap.servers: ${KAFKA_ERROR_MESSAGE_SERVERS:${KAFKA_SERVERS:localhost:9092}}
          client.id: ${KAFKA_ERROR_MESSAGE_CLIENT_ID:idpay-errors-initiative-statistics}
          sasl.jaas.config: ${KAFKA_ERROR_MESSAGE_SASL_JAAS_CONFIG:${KAFKA_SASL_JAAS_CONFIG:org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${KAFKA_ERROR_MESSAGE_CONNECTION_STRING:}";}}

spring:
  application:
    name: "@project.artifactId@"
    version: "@project.version@"
  jmx.enabled: true
  kafka:
    consumer:
      enable-auto-commit: false
    listener:
      ack-mode: MANUAL_IMMEDIATE
    producer:
      retries: ${KAFKA_PRODUCER_DEFAULT_RETRIES:3}
      security.protocol: ${KAFKA_PRODUCER_DEFAULT_SECURITY_PROTOCOL:${KAFKA_SECURITY_PROTOCOL:SASL_SSL}}
      properties:
        sasl.mechanism: ${KAFKA_PRODUCER_DEFAULT_SASL_MECHANISM:${KAFKA_SASL_MECHANISM:PLAIN}}
        sasl.jaas.config: ${KAFKA_PRODUCER_DEFAULT_SASL_JAAS_CONFIG:${KAFKA_SASL_JAAS_CONFIG:org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${KAFKA_ERROR_MESSAGE_CONNECTION_STRING:}";}}
        request.timeout.ms: ${KAFKA_PRODUCER_DEFAULT_REQUEST_TIMEOUT:30000}
        connections.max.idle.ms: ${KAFKA_PRODUCER_DEFAULT_CONNECTION_MAX_IDLE_TIME:180000}
        metadata.max.age.ms: ${KAFKA_PRODUCER_DEFAULT_METADATA_MAX_AGE_INTERVAL:180000}
        metadata.max.idle.ms: ${KAFKA_PRODUCER_DEFAULT_METADATA_MAX_IDLE_MS:180000}
        retry.backoff.ms: ${KAFKA_PRODUCER_DEFAULT_KAFKA_RETRY_MS:${KAFKA_RETRY_MS:10000}}
        linger.ms: ${KAFKA_PRODUCER_DEFAULT_LINGER_MS:${KAFKA_LINGER_MS:2}}
        batch.size: ${KAFKA_PRODUCER_DEFAULT_BATCH_SIZE:${KAFKA_BATCH_SIZE:16384}}
        max.request.size: ${KAFKA_GROUP_CONFIG_METADATA_MAX_REQUEST_SIZE:1000000}

  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017}
      database: ${MONGODB_DBNAME:idpay}
      # custom configured properties
      config:
        connectionPool:
          maxSize: ${MONGODB_CONNECTIONPOOL_MAX_SIZE:100}
          minSize: ${MONGODB_CONNECTIONPOOL_MIN_SIZE:0}
          maxWaitTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_WAIT_MS:120000}
          maxConnectionLifeTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_LIFE_MS:0}
          maxConnectionIdleTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_IDLE_MS:120000}
          maxConnecting: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTING:2}

management.endpoints:
  web:
    exposure.include: info, health

logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    it.gov.pagopa: ${LOG_LEVEL_PAGOPA:INFO}
    it.gov.pagopa.initiative.statistics: ${LOG_LEVEL_INITIATIVE_STATISTICS:INFO}
    org.springframework.integration: ${LOG_LEVEL_SPRING_INTEGRATION:INFO}
    org.springframework.security: ${LOG_LEVEL_SPRING_SECURITY:INFO}
    org.springframework.ws: ${LOG_LEVEL_SPRING_WS:INFO}
    org.springframework.cloud: ${LOG_LEVEL_SPRING_CLOUD:WARN}
    org.springframework.data: ${LOG_LEVEL_SPRING_DATA:INFO}
    org.springframework.hateoas: ${LOG_LEVEL_SPRING_HATEOAS:INFO}
    org.springframework.boot: ${LOG_LEVEL_SPRING_BOOT:INFO}
    org.springframework.kafka: ${LOG_LEVEL_SPRING_KAFKA:INFO}
    org.springframework.batch: ${LOG_LEVEL_SPRING_BATCH:INFO}
    io.swagger: ${LOG_LEVEL_IO_SWAGGER:WARN}
    javax.persistence: ${LOG_LEVEL_JAVAX_PERSISTENCE:INFO}
    org.hibernate: ${LOG_LEVEL_ORG_HIBERNATE:INFO}
    org.mongodb.driver: ${LOG_LEVEL_MONGODB_DRIVER:WARN}

